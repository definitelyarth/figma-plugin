syntax = "proto3";

enum CanvasEditorElementType {
    TEXT = 0;
    SHAPE = 1;
    IMAGE = 2;
    GROUP = 3;
    CREATIVE_BOX = 4;
    CANVAS_MASK = 5;
  }
  
enum ObjectFit {
  FILL = 0;
  FIT = 1;
  CROP = 2;
}
  
enum TextCase {
  UPPERCASE = 0;
  LOWERCASE = 1;
  TITLECASE = 2;
  NONE = 3;
}

enum FontStyle {
  NORMAL = 0;
  ITALIC = 1;
  OBLIQUE = 2;
}

enum ObjectPosition {
  TOP_LEFT = 0;
  TOP_CENTER = 1;
  TOP_RIGHT = 2;
  CENTER_LEFT = 3;
  CENTER = 4;
  CENTER_RIGHT = 5;
  BOTTOM_LEFT = 6;
  BOTTOM_CENTER = 7;
  BOTTOM_RIGHT = 8;
  CUSTOM = 9;
}

enum BorderPosition {
  CENTER = 0;
  INSIDE = 1;
  OUTSIDE = 2;
}

message PathSegment {
  repeated string path = 1;
}

message TextStyle {
  TextCase textCase = 1;
  SerializedFillType textFill = 2;
  string fontFamily = 3;
  string fontWeight = 4;
  float fontSize = 5;
  bool underline = 6;
  bool overline = 7;
  bool linethrough = 8;
  FontStyle fontStyle = 9;
  float charSpacing = 10;
  float lineHeight = 11;
}

message WordStyle {
  string id = 1;
  WordStyleData data = 2;
}

message WordStyleData {
  int32 start = 1;
  int32 end = 2;
  WordStyleProperties styles = 3;
}

message WordStyleProperties {
  string fontFamily = 1;
  float fontSize = 2;
  string fontWeight = 3;
  FontStyle fontStyle = 4;
  string textDecoration = 5;
  string textAlign = 6;
  SerializedFillType textBackgroundColor = 7;
  SerializedFillType fill = 8;
  string stroke = 9;
  float strokeWidth = 10;
}
message SerializedFillType {
  oneof fillType {
    string solidColor = 1;
    PatternOptions pattern = 2;
    GradientOptions gradient = 3;
  }
}

message PatternOptions {
  string patternType = 1;
  string patternSrc = 2;
}

message GradientOptions {
  repeated GradientStop stops = 1;
  string gradientUnits = 2;
}

message GradientStop {
  float position = 1;
  string color = 2;
}

message SerializedFabricShadow {
  string color = 1;
  float blur = 2;
  float offsetX = 3;
  float offsetY = 4;
}

message Border {
  string color = 1;
  string style = 2; // "dashed" or "solid"
  float top = 3;
  float right = 4;
  float bottom = 5;
  float left = 6;
  BorderPosition position = 7;
  float dashWidth = 8;
  float dashGap = 9;
  string dashCap = 10;
}

message Radius {
  float tl = 1;
  float tr = 2;
  float bl = 3;
  float br = 4;
}

message Padding {
  float top = 1;
  float right = 2;
  float bottom = 3;
  float left = 4;
}

message FontMetaData {
  string fontId = 1;
  string fontUrl = 2;
}

message Variants {
  VariantMetadata metadata = 1;
  Variant variant = 2;
}

message VariantMetadata {
  string name = 1;
  string createdAt = 2;
  string lastModified = 3;
  string author = 4;
  string source = 5;
  string sourceVersion = 6;
  string schemaVersion = 7;
}

message Variant {
  map<string, Size> sizes = 1;
  map<string, CanvasElementWithOverrides> objects = 2;
}

message Size {
  float width = 1;
  float height = 2;
  string id = 3;
  string displayName = 4;
}

message CanvasElementWithOverrides {
    // Common fields from BaseElementJSON
  string id = 1;
  string type = 2;
  string displayText = 3;
  CanvasEditorElementType dataType = 4;
  float left = 5;
  float top = 6;
  float width = 7;
  float height = 8;
  float angle = 9;
  float opacity = 10;
  SerializedFabricShadow shadow = 11;
  bool visible = 12;
  string globalCompositeOperation = 13;
  bool selectable = 14;
  SerializedFillType fill = 15;
  Border border = 16;
  Padding padding = 17;
  Radius cornerRadius = 18;

  // Specific fields for CreativeBoxJSON
  // No extra fields for CreativeBoxJSON, only uses base fields
  
  // Specific fields for ImageContainerJSON
  ObjectPosition objectPosition = 19;
  float imageScale = 20;
  float imageLeft = 21;
  float imageTop = 22;
  float imageWidth = 23;
  float imageHeight = 24;
  ObjectFit objectFit = 25;
  string src = 26;

  // Specific fields for PathJSON
  repeated PathSegment path = 27;
  float scale = 28;

  // Specific fields for RoundedRectJSON
  float roundedRectScale = 29; // Separated scale for rounded-rect
  
  // Specific fields for TextContainerJSON
  TextStyle textStyle = 30;
  bool autoFit = 31;
  repeated float autoFitSizes = 32; // Should be a 2-length array
  string serializedText = 33;
  FontMetaData fontMetaData = 34;
  float textLeft = 35;
  float textTop = 36;
  float textHeight = 37;
  string text = 38;
  string textAlign = 39;

  repeated WordStyle wordStyles = 41;
  int32 zIndex = 42;
  map<string, Override> overrides = 43;
}

message Override {
  CanvasElementWithOverrides override = 1;
  int32 zIndex = 2;
}

message RocketiumPortableFormat {
  repeated Variants variants = 1;   // List of Variants
  Metadata metadata = 2;            // Metadata object
}

message Metadata {
  string name = 1;
  string createdAt = 2;
  string lastModified = 3;  // Optional in TypeScript, default value null in Protobuf
  string author = 4;        // Optional in TypeScript, default value null in Protobuf
  string source = 5;
  string sourceVersion = 6;
  string schemaVersion = 7;
}